#include <stdio.h>
#include <stdlib.h>
struct node
{
    int data;
    struct node *next;
};
typedef struct node node;
node *head = NULL, *chead = NULL, *dummy;
void insert_last(int data)
{
    node *new = (node *)malloc(sizeof(node));
    new->next = NULL;
    new->data = data;
    if (head == NULL)
        head = new;
    else
    {
        node *temp = head;
        while (temp->next != NULL)
            temp = temp->next;
        temp->next = new;
    }
}
void traverse(node *ptr)
{
    node *temp = ptr;
    while (temp != NULL)
    {
        printf(" #%d# ", temp->data);
        temp = temp->next;
    }
}
void reversal()
{
    node *temp;
    // To find chead
    temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    chead = temp;
    dummy = chead;
    while (1)
    {
        temp = head;
        while (temp->next != chead)
            temp = temp->next;
        chead->next = temp;
        chead = chead->next;
        if (chead == head)
            break;
    }
    chead->next = NULL;
}
int main()
{
    insert_last(3);
    insert_last(5);
    insert_last(7);
    insert_last(9);
    insert_last(11);
    printf("Linked list before reversal : \n");
    traverse(head);
    printf("\nLinked list after reversal : \n");
    reversal();
    traverse(dummy);
}